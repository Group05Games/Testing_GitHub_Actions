name: Test JSON
on: push
env:
  APPROVED_LIST: ""

jobs:
  test_json:
    runs-on: windows-latest
    outputs:
      diff: ${{ steps.output-json.outputs.diff}}

    steps:
      - name: output json
        id: output-json
        shell: pwsh
        run: |
          #$jsonThing = '["one", "two", "three"]'
          $jsonThing = "one two three"
          #$jsonThing = "one"
          #$jsonThing = ""
          $jsonThing = $jsonThing.split(" ")
          $jsonThing = ConvertTo-Json -Compress $jsonThing
          echo "::set-output name=diff::$jsonThing"

  matrix-test:
    needs: test_json
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix: 
        package: ${{ fromJSON(needs.test_json.outputs.diff) }}
    environment: 
      name: Release ${{ matrix.package }}
      url: ${{ matrix.package }} #${{ fromJSON(needs.test_json.outputs.diff) }}
    name: matrix-test-${{ matrix.package }}

    steps:
      - run: echo "${{ matrix.package }}"
      - run: |
          echo "APPROVED_LIST=${{ env.APPROVED_LIST }},${{ matrix.package }}" >> $env:GITHUB_ENV

  format_matrix:
    needs: matrix-test
    runs-on: windows-latest
    outputs:
      approved: ${{ steps.format-json.outputs.approved}}
    steps:
      - id: format-json
        run: |
          $approvedJSON = ${{ env.APPROVED_LIST }}.split(",")
          #$approvedJSON = $approvedJSON | Where-Object { $_ -Match }
          $approvedJSON = ConvertTo-Json -Compress $approvedJSON
          echo "::set-output name=approved::$approvedJSON"


  pack_and_publish:
    needs: format_matrix
    runs-on: windows-latest
    strategy:
      matrix:
        approved: ${{ fromJSON(needs.format-json.outputs.approved) }}
    name: pack_and_publish_${{ matrix.approved }}

    steps:
      - run: |
          echo "Matrix item  - ${{ matrix.approved }}"
          echo "${{ env.APPROVED_LIST }}"


    #Try building a string in json form and ConvertTo JSON
